name: Build Unreal Plugin

on: push
# nom, wydaje mi sie develop main tag -> jfrog, tag -> github release, wszystko inne -> build, ale dev/null

env:
  CPP_SDK_TAG: "2.1.0"
  CPP_SDK_DESTINATION: "DolbyIO/Source/ThirdParty"
  CPP_SDK_URL: "https://github.com/DolbyIO/comms-sdk-cpp/releases/download"
  UNREAL_PLUGIN_OUTPUT: "Build/DolbyIO"

jobs:
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        version: ["4.27", "5.0"]
    runs-on: ["self-hosted", "X64", "macOS"]
    # User matrix for 4.27.2 and 5.0.3
    env:
      BUILD_PLATFORM: 'macos64'
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Download C++ SDK release asset
        uses: ./.github/actions/download_cpp/bash
        with:
          url: ${{ env.CPP_SDK_URL }}
          tag: ${{ env.CPP_SDK_TAG }}
          asset_name: "cppsdk-${{ env.CPP_SDK_TAG }}-${{ env.BUILD_PLATFORM }}.zip"
      - name: Run Build
        run: |
          /Users/Shared/Epic\ Games/UE_${{ matrix.version }}/Engine/Build/BatchFiles/RunUAT.sh BuildPlugin \
          -Rocket \
          -Plugin=$(pwd)/DolbyIO/DolbyIO.uplugin \
          -TargetPlatforms=Mac \
          -Package=$(pwd)/${{ env.UNREAL_PLUGIN_OUTPUT }} \
          -StrictIncludes
      - name: Zipping DolbIO Plugin
        uses: ./.github/actions/zip_artifact/bash
        with:
          zip_name: "DolbyIO_UnrealPlugin_${{ matrix.version }}_${{ env.BUILD_PLATFORM }}.zip"
          src_dir_path: ${{ env.UNREAL_PLUGIN_OUTPUT }}
      - name: Publish DolbyIO Plugin to GitHub packages
        run: |
          ls -la
          echo "Step runs only for tag, master, develop."
          echo "Publish DolbyIO_UnrealPlugin_${{ matrix.version }}.zip to JFrog generic capi repository using access token."
      - name: Create GitHub release
        run: |
          echo "Create GitHub release only for tag."
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        version: ["4.27", "5.0"]
    runs-on: ["self-hosted", "X64", "Windows"]
    env:
      BUILD_PLATFORM: 'windows64'
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Download C++ SDK release asset
        id: download_cpp
        uses: ./.github/actions/download_cpp/powershell
        with:
          url: ${{ env.CPP_SDK_URL }}
          tag: ${{ env.CPP_SDK_TAG }}
          asset_name: "cppsdk-${{ env.CPP_SDK_TAG }}-${{ env.BUILD_PLATFORM }}.zip"
      - name: Run Build
        run: |
          Write-Output "UE_${{ matrix.version }}"
          $UERunUAT = "C:\\Program Files\\Epic Games\\UE_${{ matrix.version }}\\Engine\\Build\\BatchFiles\\RunUAT.bat"
          & $UERunUAT BuildPlugin -Rocket -Plugin="$(pwd)\\DolbyIO\\DolbyIO.uplugin" -TargetPlatforms=Win64 -Package="$(pwd)\\Build\\DolbyIO" -StrictIncludes -VS2019
      - name: Zipping DolbyIO Plugin
        uses: ./.github/actions/zip_artifact/powershell
        with:
          zip_name: "DolbyIO_UnrealPlugin_${{ matrix.version }}_${{ env.BUILD_PLATFORM }}.zip"
          src_dir_path: ${{ env.UNREAL_PLUGIN_OUTPUT }}
      - name: Publish DolbyIO Plugin to GitHub pages
        run: |
          ls
          Write-Output "Step runs only for tag, master, develop."
          Write-Output "Publish DolbyIO_UnrealPlugin_${{ matrix.version }}.zip to JFrog generic capi repository using access token."
      - name: Create GitHub release
        run: |
          Write-Output "Create GitHub release only for tag."
